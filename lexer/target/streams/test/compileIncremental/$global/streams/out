[0m[[0mdebug[0m] [0m[naha] The lexer.CompoundFactor source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	unapply, copy$default$2, rightExpression$1, getExpression, <init>, apply, copy, copy$default$1, leftExpression$1.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) lexer.CompoundFactor: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) lexer.CompoundFactor.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/adam/IdeaProjects/lexer/src/test/scala/CompoundFactorTest.scala: Set(<init>, apply)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/adam/IdeaProjects/lexer/src/test/scala/ConjunctiveRepresentationTest.scala: Set(<init>)[0m
[0m[[0mdebug[0m] [0m[naha] The lexer.CompoundFactor$ source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	unapply, copy$default$2, rightExpression$1, getExpression, <init>, apply, copy, copy$default$1, leftExpression$1.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) lexer.CompoundFactor$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) lexer.CompoundFactor$.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/adam/IdeaProjects/lexer/src/test/scala/CompoundFactorTest.scala: Set(<init>, apply)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/adam/IdeaProjects/lexer/src/test/scala/ConjunctiveRepresentationTest.scala: Set(<init>)[0m
[0m[[0mdebug[0m] [0m[naha] The lexer.DisjunctiveExpression source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	unapply, copy$default$2, build, factorImplement, DisjunctiveExpression, <init>, apply, negate, copy, _factorImplement$1, copy$default$1.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) lexer.DisjunctiveExpression: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) lexer.DisjunctiveExpression.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/adam/IdeaProjects/lexer/src/test/scala/ConjunctiveRepresentationTest.scala: Set(build, DisjunctiveExpression, <init>)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/adam/IdeaProjects/lexer/src/test/scala/DisjunctiveExpressionTest.scala: Set(build, factorImplement, DisjunctiveExpression, <init>)[0m
[0m[[0mdebug[0m] [0m[naha] The lexer.DisjunctiveExpression$ source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	unapply, copy$default$2, build, factorImplement, DisjunctiveExpression, <init>, apply, negate, copy, _factorImplement$1, copy$default$1.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) lexer.DisjunctiveExpression$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) lexer.DisjunctiveExpression$.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/adam/IdeaProjects/lexer/src/test/scala/ConjunctiveRepresentationTest.scala: Set(build, DisjunctiveExpression, <init>)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/adam/IdeaProjects/lexer/src/test/scala/DisjunctiveExpressionTest.scala: Set(build, factorImplement, DisjunctiveExpression, <init>)[0m
[0m[[0mdebug[0m] [0m[naha] [0m
[0m[[0mdebug[0m] [0m[naha] Initial source changes: [0m
[0m[[0mdebug[0m] [0m[naha] 	removed:Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	added: Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	modified: Set()[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated products: Set()[0m
[0m[[0mdebug[0m] [0m[naha] External API changes: API Changes: Set(NamesChange(lexer.CompoundFactor,ModifiedNames(regularNames = unapply, copy$default$2, rightExpression$1, getExpression, <init>, apply, copy, copy$default$1, leftExpression$1, implicitNames = )), NamesChange(lexer.CompoundFactor$,ModifiedNames(regularNames = unapply, copy$default$2, rightExpression$1, getExpression, <init>, apply, copy, copy$default$1, leftExpression$1, implicitNames = )), NamesChange(lexer.DisjunctiveExpression,ModifiedNames(regularNames = unapply, copy$default$2, build, factorImplement, DisjunctiveExpression, <init>, apply, negate, copy, _factorImplement$1, copy$default$1, implicitNames = )), NamesChange(lexer.DisjunctiveExpression$,ModifiedNames(regularNames = unapply, copy$default$2, build, factorImplement, DisjunctiveExpression, <init>, apply, negate, copy, _factorImplement$1, copy$default$1, implicitNames = )))[0m
[0m[[0mdebug[0m] [0m[naha] Modified binary dependencies: Set()[0m
[0m[[0mdebug[0m] [0m[naha] Initial directly invalidated sources: Set()[0m
[0m[[0mdebug[0m] [0m[naha] [0m
[0m[[0mdebug[0m] [0m[naha] Sources indirectly invalidated by:[0m
[0m[[0mdebug[0m] [0m[naha] 	product: Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	binary dep: Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	external source: Set(/home/adam/IdeaProjects/lexer/src/test/scala/CompoundFactorTest.scala, /home/adam/IdeaProjects/lexer/src/test/scala/ConjunctiveRepresentationTest.scala, /home/adam/IdeaProjects/lexer/src/test/scala/DisjunctiveExpressionTest.scala)[0m
[0m[[0mdebug[0m] [0mAll initially invalidated sources: Set(/home/adam/IdeaProjects/lexer/src/test/scala/CompoundFactorTest.scala, /home/adam/IdeaProjects/lexer/src/test/scala/ConjunctiveRepresentationTest.scala, /home/adam/IdeaProjects/lexer/src/test/scala/DisjunctiveExpressionTest.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/adam/IdeaProjects/lexer/src/test/scala/CompoundFactorTest.scala, /home/adam/IdeaProjects/lexer/src/test/scala/ConjunctiveRepresentationTest.scala, /home/adam/IdeaProjects/lexer/src/test/scala/DisjunctiveExpressionTest.scala)[0m
[0m[[0minfo[0m] [0mCompiling 3 Scala sources to /home/adam/IdeaProjects/lexer/target/scala-2.11/test-classes...[0m
[0m[[0mdebug[0m] [0mGetting org.scala-sbt:compiler-interface:0.13.16:component from component compiler for Scala 2.11.6[0m
[0m[[0mdebug[0m] [0mGetting org.scala-sbt:compiler-interface:0.13.16:component from component compiler for Scala 2.11.6[0m
[0m[[0mdebug[0m] [0mRunning cached compiler 65478d57, interfacing (CompilerInterface) with Scala compiler version 2.11.6[0m
[0m[[0mdebug[0m] [0mCalling Scala compiler with arguments  (CompilerInterface):[0m
[0m[[0mdebug[0m] [0m	-bootclasspath[0m
[0m[[0mdebug[0m] [0m	/home/adam/Installs/jdk1.8.0_131/jre/lib/resources.jar:/home/adam/Installs/jdk1.8.0_131/jre/lib/rt.jar:/home/adam/Installs/jdk1.8.0_131/jre/lib/sunrsasign.jar:/home/adam/Installs/jdk1.8.0_131/jre/lib/jsse.jar:/home/adam/Installs/jdk1.8.0_131/jre/lib/jce.jar:/home/adam/Installs/jdk1.8.0_131/jre/lib/charsets.jar:/home/adam/Installs/jdk1.8.0_131/jre/lib/jfr.jar:/home/adam/Installs/jdk1.8.0_131/jre/classes:/home/adam/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.6.jar[0m
[0m[[0mdebug[0m] [0m	-classpath[0m
[0m[[0mdebug[0m] [0m	/home/adam/IdeaProjects/lexer/target/scala-2.11/test-classes:/home/adam/IdeaProjects/lexer/target/scala-2.11/classes:/home/adam/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-3.0.1.jar:/home/adam/.ivy2/cache/org.scalactic/scalactic_2.11/bundles/scalactic_2.11-3.0.1.jar:/home/adam/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.6.jar:/home/adam/.ivy2/cache/org.scala-lang.modules/scala-xml_2.11/bundles/scala-xml_2.11-1.0.5.jar:/home/adam/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.11/bundles/scala-parser-combinators_2.11-1.0.4.jar[0m
[0m[[0mdebug[0m] [0mScala compilation took 0.886791442 s[0m
[0m[[0mdebug[0m] [0m[naha] New invalidations:[0m
[0m[[0mdebug[0m] [0m[naha] 	Set()[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set()[0m
[0m[[0mdebug[0m] [0m[naha] Previously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0mdebug[0m] [0m[naha] 	Set()[0m
[0m[[0mdebug[0m] [0m[naha] All newly invalidated sources after taking into account (previously) recompiled sources:Set()[0m
